package com.lonar.master.a2zmaster.invoicepdf;


import java.io.FileOutputStream;
import java.util.Date;


import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chapter;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.List;
import com.itextpdf.text.ListItem;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;


public class FirstPdf {
    private static String FILE = "E:/FirstPdf.pdf";
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 22,
            Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL, BaseColor.RED);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
            Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 10,
            Font.BOLD);

    public static void main(String[] args) {
        try {
            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream(FILE));
            document.open();
            addMetaData(document);
            addTitlePage(document);
            addContent(document);
            document.close();
            System.out.println("File Created..");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // iText allows to add metadata to the PDF which can be viewed in your Adobe
    // Reader
    // under File -> Properties
    private static void addMetaData(Document document) {
        document.addTitle("Invoice");
        document.addSubject("Using Itext");
        document.addKeywords("Java, PDF, iText");
        document.addAuthor("Lonar");
        document.addCreator("Lonar Tech");
    }

    private static void addTitlePage(Document document)
            throws DocumentException {
        Paragraph preface = new Paragraph();
        // We add one empty line
      
        // Lets write a big header
        preface.add(new Paragraph("Invoice", catFont));

       addEmptyLine(preface, 1);
        // Will create: Report generated by: _name, _date
        preface.add(new Paragraph("Invoice number"+"         "+"Date Of Issue"));
        preface.add(new Paragraph("643738"+"                  "+ new Date(),smallBold));
     
        addEmptyLine(preface, 2);
        preface.add(new Paragraph(System.getProperty("user.name")+"         "+System.getProperty("user.companyname")));
        preface.add(new Paragraph(System.getProperty("user.User_address")+"         "+System.getProperty("user.address")));
        preface.add(new Paragraph(System.getProperty("user.user_city")+"         "+System.getProperty("user.city")));
        preface.add(new Paragraph(System.getProperty("user.zipcode")+"         "+System.getProperty("user.email")));
       
        addEmptyLine(preface, 1);
        document.add(preface);
 
        createTable(document);
       
    }
    private static void addContent(Document document) throws DocumentException{}
    private static void createTable(Document document)
            throws DocumentException {
        PdfPTable table = new PdfPTable(4);
        Paragraph para = new Paragraph();
        PdfPCell c1 = new PdfPCell(new Phrase("Description"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Unit cost"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Qty/Hr rate"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);
        
        c1 = new PdfPCell(new Phrase("Amount"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);
        table.setHeaderRows(1);

        table.addCell("Computer");
        table.addCell("20,000");
        table.addCell("2");
        table.addCell("40,000");
        table.addCell("Mobile");
        table.addCell("10,000");
        table.addCell("5");
        table.addCell("50,000");

        document.add(table);
        para.add(new Paragraph());

    }
    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }
}